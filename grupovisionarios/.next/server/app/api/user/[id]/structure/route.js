"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/user/[id]/structure/route";
exports.ids = ["app/api/user/[id]/structure/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&page=%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute.ts&appDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&page=%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute.ts&appDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_grupo_visionarios_grupovisionarios_src_app_api_user_id_structure_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/user/[id]/structure/route.ts */ \"(rsc)/./src/app/api/user/[id]/structure/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/user/[id]/structure/route\",\n        pathname: \"/api/user/[id]/structure\",\n        filename: \"route\",\n        bundlePath: \"app/api/user/[id]/structure/route\"\n    },\n    resolvedPagePath: \"C:\\\\grupo-visionarios\\\\grupovisionarios\\\\src\\\\app\\\\api\\\\user\\\\[id]\\\\structure\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_grupo_visionarios_grupovisionarios_src_app_api_user_id_structure_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/user/[id]/structure/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1c2VyJTJGJTVCaWQlNUQlMkZzdHJ1Y3R1cmUlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnVzZXIlMkYlNUJpZCU1RCUyRnN0cnVjdHVyZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnVzZXIlMkYlNUJpZCU1RCUyRnN0cnVjdHVyZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDZ3J1cG8tdmlzaW9uYXJpb3MlNUNncnVwb3Zpc2lvbmFyaW9zJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDZ3J1cG8tdmlzaW9uYXJpb3MlNUNncnVwb3Zpc2lvbmFyaW9zJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1QztBQUNwSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dydXBvdmlzaW9uYXJpb3MvP2JjNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcZ3J1cG8tdmlzaW9uYXJpb3NcXFxcZ3J1cG92aXNpb25hcmlvc1xcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFx1c2VyXFxcXFtpZF1cXFxcc3RydWN0dXJlXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS91c2VyL1tpZF0vc3RydWN0dXJlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdXNlci9baWRdL3N0cnVjdHVyZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdXNlci9baWRdL3N0cnVjdHVyZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXGdydXBvLXZpc2lvbmFyaW9zXFxcXGdydXBvdmlzaW9uYXJpb3NcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdXNlclxcXFxbaWRdXFxcXHN0cnVjdHVyZVxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdXNlci9baWRdL3N0cnVjdHVyZS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&page=%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute.ts&appDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/user/[id]/structure/route.ts":
/*!**************************************************!*\
  !*** ./src/app/api/user/[id]/structure/route.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_multilevel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/multilevel */ \"(rsc)/./src/lib/multilevel.ts\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./src/lib/prisma.ts\");\n\n\n\nasync function GET(request, { params }) {\n    try {\n        const userId = params.id;\n        // Obtener información real del usuario desde la base de datos\n        const userFromDb = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            include: {\n                level: true\n            }\n        });\n        if (!userFromDb) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Usuario no encontrado\"\n            }, {\n                status: 404\n            });\n        }\n        // Obtener la estructura de red\n        const networkStructure = await (0,_lib_multilevel__WEBPACK_IMPORTED_MODULE_1__.calculateNetworkStructure)(userId);\n        // Calcular estadísticas reales\n        const totalReferrals = networkStructure.directReferrals.length + networkStructure.indirectReferrals.length;\n        const activeReferrals = networkStructure.directReferrals.length + networkStructure.indirectReferrals.length // Por ahora asumimos que todos son activos\n        ;\n        // Formatear la estructura de referidos para el frontend\n        const formattedStructure = networkStructure.directReferrals.map((referral)=>({\n                id: referral.id,\n                name: referral.name,\n                email: referral.email,\n                joinDate: new Date().toISOString().split(\"T\")[0],\n                status: \"active\",\n                level: referral.level?.order || 1,\n                levelName: referral.level?.name || \"Sin nivel\"\n            }));\n        const response = {\n            success: true,\n            user: {\n                id: userFromDb.id,\n                name: userFromDb.name,\n                email: userFromDb.email,\n                inviteLink: userFromDb.inviteLink,\n                statsLink: userFromDb.statsLink,\n                trainingLink: userFromDb.trainingLink\n            },\n            statistics: {\n                totalReferrals,\n                activeReferrals,\n                directReferrals: networkStructure.directReferrals.length,\n                indirectReferrals: networkStructure.indirectReferrals.length,\n                totalEarnings: Number(userFromDb.totalEarnings) || 0,\n                monthlyEarnings: 0 // Por ahora no tenemos cálculo de ganancias mensuales\n            },\n            structure: formattedStructure,\n            qualifiesForPromotion: networkStructure.qualifiesForPromotion,\n            nextLevel: networkStructure.nextLevel\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response);\n    } catch (error) {\n        console.error(\"Error fetching user structure:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Error interno del servidor\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS91c2VyL1tpZF0vc3RydWN0dXJlL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUQ7QUFDSztBQUN2QjtBQUU5QixlQUFlRyxJQUNwQkMsT0FBb0IsRUFDcEIsRUFBRUMsTUFBTSxFQUE4QjtJQUV0QyxJQUFJO1FBQ0YsTUFBTUMsU0FBU0QsT0FBT0UsRUFBRTtRQUV4Qiw4REFBOEQ7UUFDOUQsTUFBTUMsYUFBYSxNQUFNTiwrQ0FBTUEsQ0FBQ08sSUFBSSxDQUFDQyxVQUFVLENBQUM7WUFDOUNDLE9BQU87Z0JBQUVKLElBQUlEO1lBQU87WUFDcEJNLFNBQVM7Z0JBQUVDLE9BQU87WUFBSztRQUN6QjtRQUVBLElBQUksQ0FBQ0wsWUFBWTtZQUNmLE9BQU9SLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3RCO2dCQUFFQyxTQUFTO2dCQUFPQyxPQUFPO1lBQXdCLEdBQ2pEO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSwrQkFBK0I7UUFDL0IsTUFBTUMsbUJBQW1CLE1BQU1qQiwwRUFBeUJBLENBQUNLO1FBRXpELCtCQUErQjtRQUMvQixNQUFNYSxpQkFBaUJELGlCQUFpQkUsZUFBZSxDQUFDQyxNQUFNLEdBQUdILGlCQUFpQkksaUJBQWlCLENBQUNELE1BQU07UUFDMUcsTUFBTUUsa0JBQWtCTCxpQkFBaUJFLGVBQWUsQ0FBQ0MsTUFBTSxHQUFHSCxpQkFBaUJJLGlCQUFpQixDQUFDRCxNQUFNLENBQUMsMkNBQTJDOztRQUV2Six3REFBd0Q7UUFDeEQsTUFBTUcscUJBQXFCTixpQkFBaUJFLGVBQWUsQ0FBQ0ssR0FBRyxDQUFDQyxDQUFBQSxXQUFhO2dCQUMzRW5CLElBQUltQixTQUFTbkIsRUFBRTtnQkFDZm9CLE1BQU1ELFNBQVNDLElBQUk7Z0JBQ25CQyxPQUFPRixTQUFTRSxLQUFLO2dCQUNyQkMsVUFBVSxJQUFJQyxPQUFPQyxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtnQkFDaERmLFFBQVE7Z0JBQ1JKLE9BQU9hLFNBQVNiLEtBQUssRUFBRW9CLFNBQVM7Z0JBQ2hDQyxXQUFXUixTQUFTYixLQUFLLEVBQUVjLFFBQVE7WUFDckM7UUFFQSxNQUFNUSxXQUFXO1lBQ2ZwQixTQUFTO1lBQ1ROLE1BQU07Z0JBQ0pGLElBQUlDLFdBQVdELEVBQUU7Z0JBQ2pCb0IsTUFBTW5CLFdBQVdtQixJQUFJO2dCQUNyQkMsT0FBT3BCLFdBQVdvQixLQUFLO2dCQUN2QlEsWUFBWTVCLFdBQVc0QixVQUFVO2dCQUNqQ0MsV0FBVzdCLFdBQVc2QixTQUFTO2dCQUMvQkMsY0FBYzlCLFdBQVc4QixZQUFZO1lBQ3ZDO1lBQ0FDLFlBQVk7Z0JBQ1ZwQjtnQkFDQUk7Z0JBQ0FILGlCQUFpQkYsaUJBQWlCRSxlQUFlLENBQUNDLE1BQU07Z0JBQ3hEQyxtQkFBbUJKLGlCQUFpQkksaUJBQWlCLENBQUNELE1BQU07Z0JBQzVEbUIsZUFBZUMsT0FBT2pDLFdBQVdnQyxhQUFhLEtBQUs7Z0JBQ25ERSxpQkFBaUIsRUFBRSxzREFBc0Q7WUFDM0U7WUFDQUMsV0FBV25CO1lBQ1hvQix1QkFBdUIxQixpQkFBaUIwQixxQkFBcUI7WUFDN0RDLFdBQVczQixpQkFBaUIyQixTQUFTO1FBQ3ZDO1FBRUEsT0FBTzdDLHFEQUFZQSxDQUFDYyxJQUFJLENBQUNxQjtJQUMzQixFQUFFLE9BQU9uQixPQUFPO1FBQ2Q4QixRQUFROUIsS0FBSyxDQUFDLGtDQUFrQ0E7UUFDaEQsT0FBT2hCLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3RCO1lBQUVDLFNBQVM7WUFBT0MsT0FBTztRQUE2QixHQUN0RDtZQUFFQyxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2dydXBvdmlzaW9uYXJpb3MvLi9zcmMvYXBwL2FwaS91c2VyL1tpZF0vc3RydWN0dXJlL3JvdXRlLnRzPzQ0ZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVOZXR3b3JrU3RydWN0dXJlIH0gZnJvbSAnQC9saWIvbXVsdGlsZXZlbCdcclxuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJ1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChcclxuICByZXF1ZXN0OiBOZXh0UmVxdWVzdCxcclxuICB7IHBhcmFtcyB9OiB7IHBhcmFtczogeyBpZDogc3RyaW5nIH0gfVxyXG4pIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcklkID0gcGFyYW1zLmlkXHJcblxyXG4gICAgLy8gT2J0ZW5lciBpbmZvcm1hY2nDs24gcmVhbCBkZWwgdXN1YXJpbyBkZXNkZSBsYSBiYXNlIGRlIGRhdG9zXHJcbiAgICBjb25zdCB1c2VyRnJvbURiID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XHJcbiAgICAgIHdoZXJlOiB7IGlkOiB1c2VySWQgfSxcclxuICAgICAgaW5jbHVkZTogeyBsZXZlbDogdHJ1ZSB9XHJcbiAgICB9KVxyXG5cclxuICAgIGlmICghdXNlckZyb21EYikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdVc3VhcmlvIG5vIGVuY29udHJhZG8nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwNCB9XHJcbiAgICAgIClcclxuICAgIH1cclxuXHJcbiAgICAvLyBPYnRlbmVyIGxhIGVzdHJ1Y3R1cmEgZGUgcmVkXHJcbiAgICBjb25zdCBuZXR3b3JrU3RydWN0dXJlID0gYXdhaXQgY2FsY3VsYXRlTmV0d29ya1N0cnVjdHVyZSh1c2VySWQpXHJcblxyXG4gICAgLy8gQ2FsY3VsYXIgZXN0YWTDrXN0aWNhcyByZWFsZXNcclxuICAgIGNvbnN0IHRvdGFsUmVmZXJyYWxzID0gbmV0d29ya1N0cnVjdHVyZS5kaXJlY3RSZWZlcnJhbHMubGVuZ3RoICsgbmV0d29ya1N0cnVjdHVyZS5pbmRpcmVjdFJlZmVycmFscy5sZW5ndGhcclxuICAgIGNvbnN0IGFjdGl2ZVJlZmVycmFscyA9IG5ldHdvcmtTdHJ1Y3R1cmUuZGlyZWN0UmVmZXJyYWxzLmxlbmd0aCArIG5ldHdvcmtTdHJ1Y3R1cmUuaW5kaXJlY3RSZWZlcnJhbHMubGVuZ3RoIC8vIFBvciBhaG9yYSBhc3VtaW1vcyBxdWUgdG9kb3Mgc29uIGFjdGl2b3NcclxuXHJcbiAgICAvLyBGb3JtYXRlYXIgbGEgZXN0cnVjdHVyYSBkZSByZWZlcmlkb3MgcGFyYSBlbCBmcm9udGVuZFxyXG4gICAgY29uc3QgZm9ybWF0dGVkU3RydWN0dXJlID0gbmV0d29ya1N0cnVjdHVyZS5kaXJlY3RSZWZlcnJhbHMubWFwKHJlZmVycmFsID0+ICh7XHJcbiAgICAgIGlkOiByZWZlcnJhbC5pZCxcclxuICAgICAgbmFtZTogcmVmZXJyYWwubmFtZSxcclxuICAgICAgZW1haWw6IHJlZmVycmFsLmVtYWlsLFxyXG4gICAgICBqb2luRGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF0sIC8vIFBsYWNlaG9sZGVyIHBvciBhaG9yYVxyXG4gICAgICBzdGF0dXM6ICdhY3RpdmUnLCAvLyBQb3IgYWhvcmEgdG9kb3MgYWN0aXZvc1xyXG4gICAgICBsZXZlbDogcmVmZXJyYWwubGV2ZWw/Lm9yZGVyIHx8IDEsXHJcbiAgICAgIGxldmVsTmFtZTogcmVmZXJyYWwubGV2ZWw/Lm5hbWUgfHwgJ1NpbiBuaXZlbCdcclxuICAgIH0pKVxyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0ge1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICB1c2VyOiB7XHJcbiAgICAgICAgaWQ6IHVzZXJGcm9tRGIuaWQsXHJcbiAgICAgICAgbmFtZTogdXNlckZyb21EYi5uYW1lLFxyXG4gICAgICAgIGVtYWlsOiB1c2VyRnJvbURiLmVtYWlsLFxyXG4gICAgICAgIGludml0ZUxpbms6IHVzZXJGcm9tRGIuaW52aXRlTGluayxcclxuICAgICAgICBzdGF0c0xpbms6IHVzZXJGcm9tRGIuc3RhdHNMaW5rLFxyXG4gICAgICAgIHRyYWluaW5nTGluazogdXNlckZyb21EYi50cmFpbmluZ0xpbmtcclxuICAgICAgfSxcclxuICAgICAgc3RhdGlzdGljczoge1xyXG4gICAgICAgIHRvdGFsUmVmZXJyYWxzLFxyXG4gICAgICAgIGFjdGl2ZVJlZmVycmFscyxcclxuICAgICAgICBkaXJlY3RSZWZlcnJhbHM6IG5ldHdvcmtTdHJ1Y3R1cmUuZGlyZWN0UmVmZXJyYWxzLmxlbmd0aCxcclxuICAgICAgICBpbmRpcmVjdFJlZmVycmFsczogbmV0d29ya1N0cnVjdHVyZS5pbmRpcmVjdFJlZmVycmFscy5sZW5ndGgsXHJcbiAgICAgICAgdG90YWxFYXJuaW5nczogTnVtYmVyKHVzZXJGcm9tRGIudG90YWxFYXJuaW5ncykgfHwgMCxcclxuICAgICAgICBtb250aGx5RWFybmluZ3M6IDAgLy8gUG9yIGFob3JhIG5vIHRlbmVtb3MgY8OhbGN1bG8gZGUgZ2FuYW5jaWFzIG1lbnN1YWxlc1xyXG4gICAgICB9LFxyXG4gICAgICBzdHJ1Y3R1cmU6IGZvcm1hdHRlZFN0cnVjdHVyZSxcclxuICAgICAgcXVhbGlmaWVzRm9yUHJvbW90aW9uOiBuZXR3b3JrU3RydWN0dXJlLnF1YWxpZmllc0ZvclByb21vdGlvbixcclxuICAgICAgbmV4dExldmVsOiBuZXR3b3JrU3RydWN0dXJlLm5leHRMZXZlbFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihyZXNwb25zZSlcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXNlciBzdHJ1Y3R1cmU6JywgZXJyb3IpXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKVxyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJjYWxjdWxhdGVOZXR3b3JrU3RydWN0dXJlIiwicHJpc21hIiwiR0VUIiwicmVxdWVzdCIsInBhcmFtcyIsInVzZXJJZCIsImlkIiwidXNlckZyb21EYiIsInVzZXIiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJpbmNsdWRlIiwibGV2ZWwiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwic3RhdHVzIiwibmV0d29ya1N0cnVjdHVyZSIsInRvdGFsUmVmZXJyYWxzIiwiZGlyZWN0UmVmZXJyYWxzIiwibGVuZ3RoIiwiaW5kaXJlY3RSZWZlcnJhbHMiLCJhY3RpdmVSZWZlcnJhbHMiLCJmb3JtYXR0ZWRTdHJ1Y3R1cmUiLCJtYXAiLCJyZWZlcnJhbCIsIm5hbWUiLCJlbWFpbCIsImpvaW5EYXRlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJvcmRlciIsImxldmVsTmFtZSIsInJlc3BvbnNlIiwiaW52aXRlTGluayIsInN0YXRzTGluayIsInRyYWluaW5nTGluayIsInN0YXRpc3RpY3MiLCJ0b3RhbEVhcm5pbmdzIiwiTnVtYmVyIiwibW9udGhseUVhcm5pbmdzIiwic3RydWN0dXJlIiwicXVhbGlmaWVzRm9yUHJvbW90aW9uIiwibmV4dExldmVsIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/user/[id]/structure/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/multilevel.ts":
/*!*******************************!*\
  !*** ./src/lib/multilevel.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCommission: () => (/* binding */ calculateCommission),\n/* harmony export */   calculateNetworkStructure: () => (/* binding */ calculateNetworkStructure),\n/* harmony export */   evaluateAllPromotions: () => (/* binding */ evaluateAllPromotions),\n/* harmony export */   evaluatePromotionEligibility: () => (/* binding */ evaluatePromotionEligibility),\n/* harmony export */   getAllLevels: () => (/* binding */ getAllLevels),\n/* harmony export */   getDirectReferrals: () => (/* binding */ getDirectReferrals),\n/* harmony export */   getNextLevel: () => (/* binding */ getNextLevel),\n/* harmony export */   hasThreeReferralsEach: () => (/* binding */ hasThreeReferralsEach),\n/* harmony export */   promoteUser: () => (/* binding */ promoteUser),\n/* harmony export */   registerReferral: () => (/* binding */ registerReferral)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n// --------------------------------------------------------------\n// Utilidades para convertir objetos de Prisma a los tipos planos\n// --------------------------------------------------------------\nfunction decimalToNumber(value) {\n    if (value === null || value === undefined) return 0;\n    if (typeof value === \"number\") return value;\n    // Prisma.Decimal expone toNumber()\n    return value.toNumber();\n}\nfunction mapLevel(level) {\n    return {\n        ...level,\n        commissionRate: decimalToNumber(level.commissionRate)\n    };\n}\nfunction mapUser(user) {\n    return {\n        ...user,\n        totalEarnings: decimalToNumber(user.totalEarnings),\n        level: user.level ? mapLevel(user.level) : null\n    };\n}\n// --------------------------------------------------------------\n/**\n * Obtiene los referidos directos de un usuario\n */ async function getDirectReferrals(userId) {\n    try {\n        const referralsRaw = await prisma.user.findMany({\n            where: {\n                referredBy: userId,\n                isActive: true\n            },\n            include: {\n                level: true,\n                referrals: {\n                    where: {\n                        isActive: true\n                    },\n                    include: {\n                        level: true\n                    }\n                }\n            }\n        });\n        const referrals = referralsRaw.map((r)=>mapUser(r));\n        return referrals;\n    } catch (error) {\n        console.error(\"Error fetching direct referrals:\", error);\n        return [];\n    }\n}\n/**\n * Verifica si cada uno de los referidos directos tiene al menos 3 referidos\n */ async function hasThreeReferralsEach(referrals) {\n    if (referrals.length < 3) return false;\n    for (const referral of referrals){\n        const directCount = await prisma.user.count({\n            where: {\n                referredBy: referral.id,\n                isActive: true\n            }\n        });\n        if (directCount < 3) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Calcula la estructura completa de la red de un usuario\n */ async function calculateNetworkStructure(userId) {\n    const userRaw = await prisma.user.findUnique({\n        where: {\n            id: userId\n        },\n        include: {\n            level: true\n        }\n    });\n    const user = userRaw ? mapUser(userRaw) : null;\n    if (!user) {\n        throw new Error(\"Usuario no encontrado\");\n    }\n    const directReferrals = await getDirectReferrals(userId);\n    // Calcular referidos indirectos recursivamente\n    let indirectReferrals = [];\n    let totalDepth = 0;\n    for (const direct of directReferrals){\n        const indirectFromThisUser = await getIndirectReferrals(direct.id, 1, 5) // Max 5 niveles de profundidad\n        ;\n        indirectReferrals = [\n            ...indirectReferrals,\n            ...indirectFromThisUser.referrals\n        ];\n        totalDepth = Math.max(totalDepth, indirectFromThisUser.depth + 1);\n    }\n    // Actualizar contadores en la base de datos\n    await prisma.user.update({\n        where: {\n            id: userId\n        },\n        data: {\n            directReferralsCount: directReferrals.length,\n            indirectReferralsCount: indirectReferrals.length\n        }\n    });\n    // Verificar si califica para promoción\n    const qualifiesForPromotion = await evaluatePromotionEligibility(userId, directReferrals, indirectReferrals);\n    // Obtener siguiente nivel\n    const nextLevel = await getNextLevel(user.levelId);\n    return {\n        user,\n        directReferrals,\n        indirectReferrals,\n        totalDepth,\n        qualifiesForPromotion,\n        nextLevel\n    };\n}\n/**\n * Obtiene referidos indirectos recursivamente\n */ async function getIndirectReferrals(userId, currentDepth, maxDepth) {\n    if (currentDepth >= maxDepth) {\n        return {\n            referrals: [],\n            depth: currentDepth\n        };\n    }\n    const directReferrals = await getDirectReferrals(userId);\n    let allIndirectReferrals = [];\n    let maxDepthFound = currentDepth;\n    for (const direct of directReferrals){\n        const indirectResult = await getIndirectReferrals(direct.id, currentDepth + 1, maxDepth);\n        allIndirectReferrals = [\n            ...allIndirectReferrals,\n            ...indirectResult.referrals\n        ];\n        maxDepthFound = Math.max(maxDepthFound, indirectResult.depth);\n    }\n    return {\n        referrals: [\n            ...directReferrals,\n            ...allIndirectReferrals\n        ],\n        depth: maxDepthFound\n    };\n}\n/**\n * Evalúa si un usuario es elegible para promoción\n */ async function evaluatePromotionEligibility(userId, directReferrals, indirectReferrals) {\n    const user = await prisma.user.findUnique({\n        where: {\n            id: userId\n        },\n        include: {\n            level: true\n        }\n    });\n    if (!user) return false;\n    const nextLevel = await getNextLevel(user.levelId);\n    if (!nextLevel) return false;\n    // Verificar requisitos mínimos\n    const hasEnoughDirect = directReferrals.length >= nextLevel.minDirectReferrals;\n    const hasEnoughIndirect = indirectReferrals.length >= nextLevel.minIndirectReferrals;\n    // Verificar estructura 3x3 específica\n    if (nextLevel.order >= 2) {\n        const hasValidStructure = await hasThreeReferralsEach(directReferrals.slice(0, 3));\n        return hasEnoughDirect && hasEnoughIndirect && hasValidStructure;\n    }\n    return hasEnoughDirect && hasEnoughIndirect;\n}\n/**\n * Promociona un usuario al siguiente nivel\n */ async function promoteUser(userId) {\n    try {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            include: {\n                level: true\n            }\n        });\n        if (!user) {\n            return {\n                success: false,\n                error: \"Usuario no encontrado\"\n            };\n        }\n        const nextLevel = await getNextLevel(user.levelId);\n        if (!nextLevel) {\n            return {\n                success: false,\n                error: \"No hay nivel siguiente disponible\"\n            };\n        }\n        // Verificar elegibilidad\n        const structure = await calculateNetworkStructure(userId);\n        if (!structure.qualifiesForPromotion) {\n            return {\n                success: false,\n                error: \"El usuario no cumple los requisitos para promoci\\xf3n\"\n            };\n        }\n        // Realizar la promoción\n        await prisma.$transaction([\n            // Actualizar nivel del usuario\n            prisma.user.update({\n                where: {\n                    id: userId\n                },\n                data: {\n                    levelId: nextLevel.id,\n                    lastPromotionAt: new Date()\n                }\n            }),\n            // Registrar en historial de promociones\n            prisma.promotion.create({\n                data: {\n                    userId,\n                    fromLevelId: user.levelId,\n                    toLevelId: nextLevel.id,\n                    reason: \"Automatic promotion - Requirements met\",\n                    metadata: {\n                        directReferrals: structure.directReferrals.length,\n                        indirectReferrals: structure.indirectReferrals.length,\n                        evaluatedAt: new Date().toISOString()\n                    }\n                }\n            })\n        ]);\n        return {\n            success: true,\n            newLevel: nextLevel\n        };\n    } catch (error) {\n        console.error(\"Error promoting user:\", error);\n        return {\n            success: false,\n            error: \"Error interno del servidor\"\n        };\n    }\n}\n/**\n * Obtiene el siguiente nivel basado en el nivel actual\n */ async function getNextLevel(currentLevelId) {\n    try {\n        if (!currentLevelId) {\n            // Si no tiene nivel, obtener el primer nivel\n            const nextLevelRaw = await prisma.level.findFirst({\n                where: {\n                    order: 1\n                }\n            });\n            return nextLevelRaw ? mapLevel(nextLevelRaw) : null;\n        }\n        const currentLevelRaw = await prisma.level.findUnique({\n            where: {\n                id: currentLevelId\n            }\n        });\n        if (!currentLevelRaw) return null;\n        // Obtener el siguiente nivel\n        const nextLevelRaw = await prisma.level.findFirst({\n            where: {\n                order: currentLevelRaw.order + 1\n            }\n        });\n        return nextLevelRaw ? mapLevel(nextLevelRaw) : null;\n    } catch (error) {\n        console.error(\"Error getting next level:\", error);\n        return null;\n    }\n}\n/**\n * Obtiene todos los niveles ordenados\n */ async function getAllLevels() {\n    try {\n        const levelsRaw = await prisma.level.findMany({\n            orderBy: {\n                order: \"asc\"\n            }\n        });\n        return levelsRaw.map((lvl)=>mapLevel(lvl));\n    } catch (error) {\n        console.error(\"Error fetching levels:\", error);\n        return [];\n    }\n}\n/**\n * Evalúa promociones para todos los usuarios activos (para cronjob)\n */ async function evaluateAllPromotions() {\n    try {\n        const activeUsers = await prisma.user.findMany({\n            where: {\n                isActive: true,\n                role: \"AFFILIATE\"\n            },\n            include: {\n                level: true\n            }\n        });\n        let promoted = 0;\n        const evaluated = activeUsers.length;\n        for (const user of activeUsers){\n            const structure = await calculateNetworkStructure(user.id);\n            if (structure.qualifiesForPromotion) {\n                const result = await promoteUser(user.id);\n                if (result.success) {\n                    promoted++;\n                    console.log(`✅ Usuario ${user.name} promovido a ${result.newLevel?.name}`);\n                }\n            }\n        }\n        return {\n            promoted,\n            evaluated\n        };\n    } catch (error) {\n        console.error(\"Error evaluating all promotions:\", error);\n        return {\n            promoted: 0,\n            evaluated: 0\n        };\n    }\n}\n/**\n * Calcula las comisiones basadas en el nivel del usuario\n */ async function calculateCommission(userId, baseAmount) {\n    try {\n        const user = await prisma.user.findUnique({\n            where: {\n                id: userId\n            },\n            include: {\n                level: true\n            }\n        });\n        if (!user || !user.level) {\n            // Comisión base si no tiene nivel\n            return baseAmount * 0.10 // 10%\n            ;\n        }\n        return baseAmount * (decimalToNumber(user.level.commissionRate) / 100);\n    } catch (error) {\n        console.error(\"Error calculating commission:\", error);\n        return 0;\n    }\n}\n/**\n * Registra un nuevo referido y evalúa promociones\n */ async function registerReferral(referrerId, referredId) {\n    try {\n        // Registrar el referido\n        await prisma.user.update({\n            where: {\n                id: referredId\n            },\n            data: {\n                referredBy: referrerId\n            }\n        });\n        // Crear registro en tabla de referrals\n        await prisma.referral.create({\n            data: {\n                referrerId,\n                referredId,\n                level: 1,\n                commission: 0,\n                status: \"APPROVED\"\n            }\n        });\n        // Evaluar promoción del referrer\n        const structure = await calculateNetworkStructure(referrerId);\n        let promotionResult = null;\n        if (structure.qualifiesForPromotion) {\n            promotionResult = await promoteUser(referrerId);\n        }\n        return {\n            success: true,\n            promotionResult\n        };\n    } catch (error) {\n        console.error(\"Error registering referral:\", error);\n        return {\n            success: false\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVEsQ0FBQzZDLE1BQU0sQ0FBQztZQUMzQjNCLE1BQU07Z0JBQ0pzRDtnQkFDQUM7Z0JBQ0E3RixPQUFPO2dCQUNQOEYsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1FBQ0Y7UUFFQSxpQ0FBaUM7UUFDakMsTUFBTW5DLFlBQVksTUFBTXBDLDBCQUEwQm9FO1FBQ2xELElBQUlJLGtCQUFrQjtRQUV0QixJQUFJcEMsVUFBVW5CLHFCQUFxQixFQUFFO1lBQ25DdUQsa0JBQWtCLE1BQU10QyxZQUFZa0M7UUFDdEM7UUFFQSxPQUFPO1lBQUVqQyxTQUFTO1lBQU1xQztRQUFnQjtJQUMxQyxFQUFFLE9BQU9oRixPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQywrQkFBK0JBO1FBQzdDLE9BQU87WUFBRTJDLFNBQVM7UUFBTTtJQUMxQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3J1cG92aXNpb25hcmlvcy8uL3NyYy9saWIvbXVsdGlsZXZlbC50cz85ZjQyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCwgUHJpc21hIH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5leHBvcnQgaW50ZXJmYWNlIFVzZXIge1xuICBpZDogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICBlbWFpbDogc3RyaW5nXG4gIGxldmVsSWQ6IHN0cmluZyB8IG51bGxcbiAgcmVmZXJyZWRCeTogc3RyaW5nIHwgbnVsbFxuICBkaXJlY3RSZWZlcnJhbHNDb3VudDogbnVtYmVyXG4gIGluZGlyZWN0UmVmZXJyYWxzQ291bnQ6IG51bWJlclxuICB0b3RhbEVhcm5pbmdzOiBudW1iZXIgfCBQcmlzbWEuRGVjaW1hbCAvLyBhY2VwdGFyIERlY2ltYWwgbyBudW1iZXJcbiAgbGV2ZWw/OiBMZXZlbCB8IG51bGxcbiAgcmVmZXJyYWxzPzogVXNlcltdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGV2ZWwge1xuICBpZDogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICBvcmRlcjogbnVtYmVyXG4gIGNvbW1pc3Npb25SYXRlOiBudW1iZXIgfCBQcmlzbWEuRGVjaW1hbCAvLyBhY2VwdGFyIERlY2ltYWwgbyBudW1iZXJcbiAgcmVxdWlyZW1lbnRzRGVzY3JpcHRpb246IHN0cmluZ1xuICBjb2xvcjogc3RyaW5nXG4gIGljb24/OiBzdHJpbmcgfCBudWxsXG4gIG1pbkRpcmVjdFJlZmVycmFsczogbnVtYmVyXG4gIG1pbkluZGlyZWN0UmVmZXJyYWxzOiBudW1iZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBOZXR3b3JrU3RydWN0dXJlIHtcbiAgdXNlcjogVXNlclxuICBkaXJlY3RSZWZlcnJhbHM6IFVzZXJbXVxuICBpbmRpcmVjdFJlZmVycmFsczogVXNlcltdXG4gIHRvdGFsRGVwdGg6IG51bWJlclxuICBxdWFsaWZpZXNGb3JQcm9tb3Rpb246IGJvb2xlYW5cbiAgbmV4dExldmVsPzogTGV2ZWwgfCBudWxsXG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBVdGlsaWRhZGVzIHBhcmEgY29udmVydGlyIG9iamV0b3MgZGUgUHJpc21hIGEgbG9zIHRpcG9zIHBsYW5vc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmZ1bmN0aW9uIGRlY2ltYWxUb051bWJlcih2YWx1ZTogbnVtYmVyIHwgUHJpc21hLkRlY2ltYWwgfCBudWxsIHwgdW5kZWZpbmVkKTogbnVtYmVyIHtcbiAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybiAwXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSByZXR1cm4gdmFsdWVcbiAgLy8gUHJpc21hLkRlY2ltYWwgZXhwb25lIHRvTnVtYmVyKClcbiAgcmV0dXJuICh2YWx1ZSBhcyBQcmlzbWEuRGVjaW1hbCkudG9OdW1iZXIoKVxufVxuXG5mdW5jdGlvbiBtYXBMZXZlbChsZXZlbDogYW55KTogTGV2ZWwge1xuICByZXR1cm4ge1xuICAgIC4uLmxldmVsLFxuICAgIGNvbW1pc3Npb25SYXRlOiBkZWNpbWFsVG9OdW1iZXIobGV2ZWwuY29tbWlzc2lvblJhdGUpXG4gIH1cbn1cblxuZnVuY3Rpb24gbWFwVXNlcih1c2VyOiBhbnkpOiBVc2VyIHtcbiAgcmV0dXJuIHtcbiAgICAuLi51c2VyLFxuICAgIHRvdGFsRWFybmluZ3M6IGRlY2ltYWxUb051bWJlcih1c2VyLnRvdGFsRWFybmluZ3MpLFxuICAgIGxldmVsOiB1c2VyLmxldmVsID8gbWFwTGV2ZWwodXNlci5sZXZlbCkgOiBudWxsXG4gIH1cbn1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8qKlxuICogT2J0aWVuZSBsb3MgcmVmZXJpZG9zIGRpcmVjdG9zIGRlIHVuIHVzdWFyaW9cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldERpcmVjdFJlZmVycmFscyh1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8VXNlcltdPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVmZXJyYWxzUmF3ID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZE1hbnkoe1xuICAgICAgd2hlcmU6IHtcbiAgICAgICAgcmVmZXJyZWRCeTogdXNlcklkLFxuICAgICAgICBpc0FjdGl2ZTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgbGV2ZWw6IHRydWUsXG4gICAgICAgIHJlZmVycmFsczoge1xuICAgICAgICAgIHdoZXJlOiB7IGlzQWN0aXZlOiB0cnVlIH0sXG4gICAgICAgICAgaW5jbHVkZTogeyBsZXZlbDogdHJ1ZSB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgY29uc3QgcmVmZXJyYWxzOiBVc2VyW10gPSByZWZlcnJhbHNSYXcubWFwKChyOiBhbnkpID0+IG1hcFVzZXIocikpXG5cbiAgICByZXR1cm4gcmVmZXJyYWxzXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGlyZWN0IHJlZmVycmFsczonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vKipcbiAqIFZlcmlmaWNhIHNpIGNhZGEgdW5vIGRlIGxvcyByZWZlcmlkb3MgZGlyZWN0b3MgdGllbmUgYWwgbWVub3MgMyByZWZlcmlkb3NcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhc1RocmVlUmVmZXJyYWxzRWFjaChyZWZlcnJhbHM6IFVzZXJbXSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICBpZiAocmVmZXJyYWxzLmxlbmd0aCA8IDMpIHJldHVybiBmYWxzZVxuXG4gIGZvciAoY29uc3QgcmVmZXJyYWwgb2YgcmVmZXJyYWxzKSB7XG4gICAgY29uc3QgZGlyZWN0Q291bnQgPSBhd2FpdCBwcmlzbWEudXNlci5jb3VudCh7XG4gICAgICB3aGVyZToge1xuICAgICAgICByZWZlcnJlZEJ5OiByZWZlcnJhbC5pZCxcbiAgICAgICAgaXNBY3RpdmU6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgaWYgKGRpcmVjdENvdW50IDwgMykge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBDYWxjdWxhIGxhIGVzdHJ1Y3R1cmEgY29tcGxldGEgZGUgbGEgcmVkIGRlIHVuIHVzdWFyaW9cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNhbGN1bGF0ZU5ldHdvcmtTdHJ1Y3R1cmUodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPE5ldHdvcmtTdHJ1Y3R1cmU+IHtcbiAgY29uc3QgdXNlclJhdyA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xuICAgIHdoZXJlOiB7IGlkOiB1c2VySWQgfSxcbiAgICBpbmNsdWRlOiB7IGxldmVsOiB0cnVlIH1cbiAgfSlcbiAgY29uc3QgdXNlcjogVXNlciB8IG51bGwgPSB1c2VyUmF3ID8gbWFwVXNlcih1c2VyUmF3KSA6IG51bGxcblxuICBpZiAoIXVzZXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzdWFyaW8gbm8gZW5jb250cmFkbycpXG4gIH1cblxuICBjb25zdCBkaXJlY3RSZWZlcnJhbHMgPSBhd2FpdCBnZXREaXJlY3RSZWZlcnJhbHModXNlcklkKVxuICBcbiAgLy8gQ2FsY3VsYXIgcmVmZXJpZG9zIGluZGlyZWN0b3MgcmVjdXJzaXZhbWVudGVcbiAgbGV0IGluZGlyZWN0UmVmZXJyYWxzOiBVc2VyW10gPSBbXVxuICBsZXQgdG90YWxEZXB0aCA9IDBcblxuICBmb3IgKGNvbnN0IGRpcmVjdCBvZiBkaXJlY3RSZWZlcnJhbHMpIHtcbiAgICBjb25zdCBpbmRpcmVjdEZyb21UaGlzVXNlciA9IGF3YWl0IGdldEluZGlyZWN0UmVmZXJyYWxzKGRpcmVjdC5pZCwgMSwgNSkgLy8gTWF4IDUgbml2ZWxlcyBkZSBwcm9mdW5kaWRhZFxuICAgIGluZGlyZWN0UmVmZXJyYWxzID0gWy4uLmluZGlyZWN0UmVmZXJyYWxzLCAuLi5pbmRpcmVjdEZyb21UaGlzVXNlci5yZWZlcnJhbHNdXG4gICAgdG90YWxEZXB0aCA9IE1hdGgubWF4KHRvdGFsRGVwdGgsIGluZGlyZWN0RnJvbVRoaXNVc2VyLmRlcHRoICsgMSlcbiAgfVxuXG4gIC8vIEFjdHVhbGl6YXIgY29udGFkb3JlcyBlbiBsYSBiYXNlIGRlIGRhdG9zXG4gIGF3YWl0IHByaXNtYS51c2VyLnVwZGF0ZSh7XG4gICAgd2hlcmU6IHsgaWQ6IHVzZXJJZCB9LFxuICAgIGRhdGE6IHtcbiAgICAgIGRpcmVjdFJlZmVycmFsc0NvdW50OiBkaXJlY3RSZWZlcnJhbHMubGVuZ3RoLFxuICAgICAgaW5kaXJlY3RSZWZlcnJhbHNDb3VudDogaW5kaXJlY3RSZWZlcnJhbHMubGVuZ3RoXG4gICAgfVxuICB9KVxuXG4gIC8vIFZlcmlmaWNhciBzaSBjYWxpZmljYSBwYXJhIHByb21vY2nDs25cbiAgY29uc3QgcXVhbGlmaWVzRm9yUHJvbW90aW9uID0gYXdhaXQgZXZhbHVhdGVQcm9tb3Rpb25FbGlnaWJpbGl0eSh1c2VySWQsIGRpcmVjdFJlZmVycmFscywgaW5kaXJlY3RSZWZlcnJhbHMpXG4gIFxuICAvLyBPYnRlbmVyIHNpZ3VpZW50ZSBuaXZlbFxuICBjb25zdCBuZXh0TGV2ZWwgPSBhd2FpdCBnZXROZXh0TGV2ZWwodXNlci5sZXZlbElkKVxuXG4gIHJldHVybiB7XG4gICAgdXNlcixcbiAgICBkaXJlY3RSZWZlcnJhbHMsXG4gICAgaW5kaXJlY3RSZWZlcnJhbHMsXG4gICAgdG90YWxEZXB0aCxcbiAgICBxdWFsaWZpZXNGb3JQcm9tb3Rpb24sXG4gICAgbmV4dExldmVsXG4gIH1cbn1cblxuLyoqXG4gKiBPYnRpZW5lIHJlZmVyaWRvcyBpbmRpcmVjdG9zIHJlY3Vyc2l2YW1lbnRlXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldEluZGlyZWN0UmVmZXJyYWxzKHVzZXJJZDogc3RyaW5nLCBjdXJyZW50RGVwdGg6IG51bWJlciwgbWF4RGVwdGg6IG51bWJlcik6IFByb21pc2U8eyByZWZlcnJhbHM6IFVzZXJbXSwgZGVwdGg6IG51bWJlciB9PiB7XG4gIGlmIChjdXJyZW50RGVwdGggPj0gbWF4RGVwdGgpIHtcbiAgICByZXR1cm4geyByZWZlcnJhbHM6IFtdLCBkZXB0aDogY3VycmVudERlcHRoIH1cbiAgfVxuXG4gIGNvbnN0IGRpcmVjdFJlZmVycmFscyA9IGF3YWl0IGdldERpcmVjdFJlZmVycmFscyh1c2VySWQpXG4gIGxldCBhbGxJbmRpcmVjdFJlZmVycmFsczogVXNlcltdID0gW11cbiAgbGV0IG1heERlcHRoRm91bmQgPSBjdXJyZW50RGVwdGhcblxuICBmb3IgKGNvbnN0IGRpcmVjdCBvZiBkaXJlY3RSZWZlcnJhbHMpIHtcbiAgICBjb25zdCBpbmRpcmVjdFJlc3VsdCA9IGF3YWl0IGdldEluZGlyZWN0UmVmZXJyYWxzKGRpcmVjdC5pZCwgY3VycmVudERlcHRoICsgMSwgbWF4RGVwdGgpXG4gICAgYWxsSW5kaXJlY3RSZWZlcnJhbHMgPSBbLi4uYWxsSW5kaXJlY3RSZWZlcnJhbHMsIC4uLmluZGlyZWN0UmVzdWx0LnJlZmVycmFsc11cbiAgICBtYXhEZXB0aEZvdW5kID0gTWF0aC5tYXgobWF4RGVwdGhGb3VuZCwgaW5kaXJlY3RSZXN1bHQuZGVwdGgpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHJlZmVycmFsczogWy4uLmRpcmVjdFJlZmVycmFscywgLi4uYWxsSW5kaXJlY3RSZWZlcnJhbHNdLFxuICAgIGRlcHRoOiBtYXhEZXB0aEZvdW5kXG4gIH1cbn1cblxuLyoqXG4gKiBFdmFsw7phIHNpIHVuIHVzdWFyaW8gZXMgZWxlZ2libGUgcGFyYSBwcm9tb2Npw7NuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBldmFsdWF0ZVByb21vdGlvbkVsaWdpYmlsaXR5KHVzZXJJZDogc3RyaW5nLCBkaXJlY3RSZWZlcnJhbHM6IFVzZXJbXSwgaW5kaXJlY3RSZWZlcnJhbHM6IFVzZXJbXSk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XG4gICAgd2hlcmU6IHsgaWQ6IHVzZXJJZCB9LFxuICAgIGluY2x1ZGU6IHsgbGV2ZWw6IHRydWUgfVxuICB9KVxuXG4gIGlmICghdXNlcikgcmV0dXJuIGZhbHNlXG5cbiAgY29uc3QgbmV4dExldmVsID0gYXdhaXQgZ2V0TmV4dExldmVsKHVzZXIubGV2ZWxJZClcbiAgaWYgKCFuZXh0TGV2ZWwpIHJldHVybiBmYWxzZVxuXG4gIC8vIFZlcmlmaWNhciByZXF1aXNpdG9zIG3DrW5pbW9zXG4gIGNvbnN0IGhhc0Vub3VnaERpcmVjdCA9IGRpcmVjdFJlZmVycmFscy5sZW5ndGggPj0gbmV4dExldmVsLm1pbkRpcmVjdFJlZmVycmFsc1xuICBjb25zdCBoYXNFbm91Z2hJbmRpcmVjdCA9IGluZGlyZWN0UmVmZXJyYWxzLmxlbmd0aCA+PSBuZXh0TGV2ZWwubWluSW5kaXJlY3RSZWZlcnJhbHNcblxuICAvLyBWZXJpZmljYXIgZXN0cnVjdHVyYSAzeDMgZXNwZWPDrWZpY2FcbiAgaWYgKG5leHRMZXZlbC5vcmRlciA+PSAyKSB7XG4gICAgY29uc3QgaGFzVmFsaWRTdHJ1Y3R1cmUgPSBhd2FpdCBoYXNUaHJlZVJlZmVycmFsc0VhY2goZGlyZWN0UmVmZXJyYWxzLnNsaWNlKDAsIDMpKVxuICAgIHJldHVybiBoYXNFbm91Z2hEaXJlY3QgJiYgaGFzRW5vdWdoSW5kaXJlY3QgJiYgaGFzVmFsaWRTdHJ1Y3R1cmVcbiAgfVxuXG4gIHJldHVybiBoYXNFbm91Z2hEaXJlY3QgJiYgaGFzRW5vdWdoSW5kaXJlY3Rcbn1cblxuLyoqXG4gKiBQcm9tb2Npb25hIHVuIHVzdWFyaW8gYWwgc2lndWllbnRlIG5pdmVsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcm9tb3RlVXNlcih1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuLCBuZXdMZXZlbD86IExldmVsLCBlcnJvcj86IHN0cmluZyB9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xuICAgICAgd2hlcmU6IHsgaWQ6IHVzZXJJZCB9LFxuICAgICAgaW5jbHVkZTogeyBsZXZlbDogdHJ1ZSB9XG4gICAgfSlcblxuICAgIGlmICghdXNlcikge1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnVXN1YXJpbyBubyBlbmNvbnRyYWRvJyB9XG4gICAgfVxuXG4gICAgY29uc3QgbmV4dExldmVsID0gYXdhaXQgZ2V0TmV4dExldmVsKHVzZXIubGV2ZWxJZClcbiAgICBpZiAoIW5leHRMZXZlbCkge1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnTm8gaGF5IG5pdmVsIHNpZ3VpZW50ZSBkaXNwb25pYmxlJyB9XG4gICAgfVxuXG4gICAgLy8gVmVyaWZpY2FyIGVsZWdpYmlsaWRhZFxuICAgIGNvbnN0IHN0cnVjdHVyZSA9IGF3YWl0IGNhbGN1bGF0ZU5ldHdvcmtTdHJ1Y3R1cmUodXNlcklkKVxuICAgIGlmICghc3RydWN0dXJlLnF1YWxpZmllc0ZvclByb21vdGlvbikge1xuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnRWwgdXN1YXJpbyBubyBjdW1wbGUgbG9zIHJlcXVpc2l0b3MgcGFyYSBwcm9tb2Npw7NuJyB9XG4gICAgfVxuXG4gICAgLy8gUmVhbGl6YXIgbGEgcHJvbW9jacOzblxuICAgIGF3YWl0IHByaXNtYS4kdHJhbnNhY3Rpb24oW1xuICAgICAgLy8gQWN0dWFsaXphciBuaXZlbCBkZWwgdXN1YXJpb1xuICAgICAgcHJpc21hLnVzZXIudXBkYXRlKHtcbiAgICAgICAgd2hlcmU6IHsgaWQ6IHVzZXJJZCB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgbGV2ZWxJZDogbmV4dExldmVsLmlkLFxuICAgICAgICAgIGxhc3RQcm9tb3Rpb25BdDogbmV3IERhdGUoKVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIC8vIFJlZ2lzdHJhciBlbiBoaXN0b3JpYWwgZGUgcHJvbW9jaW9uZXNcbiAgICAgIHByaXNtYS5wcm9tb3Rpb24uY3JlYXRlKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHVzZXJJZCxcbiAgICAgICAgICBmcm9tTGV2ZWxJZDogdXNlci5sZXZlbElkLFxuICAgICAgICAgIHRvTGV2ZWxJZDogbmV4dExldmVsLmlkLFxuICAgICAgICAgIHJlYXNvbjogJ0F1dG9tYXRpYyBwcm9tb3Rpb24gLSBSZXF1aXJlbWVudHMgbWV0JyxcbiAgICAgICAgICBtZXRhZGF0YToge1xuICAgICAgICAgICAgZGlyZWN0UmVmZXJyYWxzOiBzdHJ1Y3R1cmUuZGlyZWN0UmVmZXJyYWxzLmxlbmd0aCxcbiAgICAgICAgICAgIGluZGlyZWN0UmVmZXJyYWxzOiBzdHJ1Y3R1cmUuaW5kaXJlY3RSZWZlcnJhbHMubGVuZ3RoLFxuICAgICAgICAgICAgZXZhbHVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSlcbiAgICBdKVxuXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgbmV3TGV2ZWw6IG5leHRMZXZlbCB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcHJvbW90aW5nIHVzZXI6JywgZXJyb3IpXG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH1cbiAgfVxufVxuXG4vKipcbiAqIE9idGllbmUgZWwgc2lndWllbnRlIG5pdmVsIGJhc2FkbyBlbiBlbCBuaXZlbCBhY3R1YWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE5leHRMZXZlbChjdXJyZW50TGV2ZWxJZDogc3RyaW5nIHwgbnVsbCk6IFByb21pc2U8TGV2ZWwgfCBudWxsPiB7XG4gIHRyeSB7XG4gICAgaWYgKCFjdXJyZW50TGV2ZWxJZCkge1xuICAgICAgLy8gU2kgbm8gdGllbmUgbml2ZWwsIG9idGVuZXIgZWwgcHJpbWVyIG5pdmVsXG4gICAgICBjb25zdCBuZXh0TGV2ZWxSYXcgPSBhd2FpdCBwcmlzbWEubGV2ZWwuZmluZEZpcnN0KHtcbiAgICAgICAgd2hlcmU6IHsgb3JkZXI6IDEgfVxuICAgICAgfSlcbiAgICAgIHJldHVybiBuZXh0TGV2ZWxSYXcgPyBtYXBMZXZlbChuZXh0TGV2ZWxSYXcpIDogbnVsbFxuICAgIH1cblxuICAgIGNvbnN0IGN1cnJlbnRMZXZlbFJhdyA9IGF3YWl0IHByaXNtYS5sZXZlbC5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7IGlkOiBjdXJyZW50TGV2ZWxJZCB9XG4gICAgfSlcblxuICAgIGlmICghY3VycmVudExldmVsUmF3KSByZXR1cm4gbnVsbFxuXG4gICAgLy8gT2J0ZW5lciBlbCBzaWd1aWVudGUgbml2ZWxcbiAgICBjb25zdCBuZXh0TGV2ZWxSYXcgPSBhd2FpdCBwcmlzbWEubGV2ZWwuZmluZEZpcnN0KHtcbiAgICAgIHdoZXJlOiB7IG9yZGVyOiBjdXJyZW50TGV2ZWxSYXcub3JkZXIgKyAxIH1cbiAgICB9KVxuICAgIHJldHVybiBuZXh0TGV2ZWxSYXcgPyBtYXBMZXZlbChuZXh0TGV2ZWxSYXcpIDogbnVsbFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgbmV4dCBsZXZlbDonLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbi8qKlxuICogT2J0aWVuZSB0b2RvcyBsb3Mgbml2ZWxlcyBvcmRlbmFkb3NcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbExldmVscygpOiBQcm9taXNlPExldmVsW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBsZXZlbHNSYXcgPSBhd2FpdCBwcmlzbWEubGV2ZWwuZmluZE1hbnkoe1xuICAgICAgb3JkZXJCeTogeyBvcmRlcjogJ2FzYycgfVxuICAgIH0pXG4gICAgcmV0dXJuIGxldmVsc1Jhdy5tYXAoKGx2bDogYW55KSA9PiBtYXBMZXZlbChsdmwpKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGxldmVsczonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vKipcbiAqIEV2YWzDumEgcHJvbW9jaW9uZXMgcGFyYSB0b2RvcyBsb3MgdXN1YXJpb3MgYWN0aXZvcyAocGFyYSBjcm9uam9iKVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXZhbHVhdGVBbGxQcm9tb3Rpb25zKCk6IFByb21pc2U8eyBwcm9tb3RlZDogbnVtYmVyLCBldmFsdWF0ZWQ6IG51bWJlciB9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgYWN0aXZlVXNlcnMgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kTWFueSh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBpc0FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgcm9sZTogJ0FGRklMSUFURSdcbiAgICAgIH0sXG4gICAgICBpbmNsdWRlOiB7IGxldmVsOiB0cnVlIH1cbiAgICB9KVxuXG4gICAgbGV0IHByb21vdGVkID0gMFxuICAgIGNvbnN0IGV2YWx1YXRlZCA9IGFjdGl2ZVVzZXJzLmxlbmd0aFxuXG4gICAgZm9yIChjb25zdCB1c2VyIG9mIGFjdGl2ZVVzZXJzKSB7XG4gICAgICBjb25zdCBzdHJ1Y3R1cmUgPSBhd2FpdCBjYWxjdWxhdGVOZXR3b3JrU3RydWN0dXJlKHVzZXIuaWQpXG4gICAgICBpZiAoc3RydWN0dXJlLnF1YWxpZmllc0ZvclByb21vdGlvbikge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcm9tb3RlVXNlcih1c2VyLmlkKVxuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICBwcm9tb3RlZCsrXG4gICAgICAgICAgY29uc29sZS5sb2coYOKchSBVc3VhcmlvICR7dXNlci5uYW1lfSBwcm9tb3ZpZG8gYSAke3Jlc3VsdC5uZXdMZXZlbD8ubmFtZX1gKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgcHJvbW90ZWQsIGV2YWx1YXRlZCB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZXZhbHVhdGluZyBhbGwgcHJvbW90aW9uczonLCBlcnJvcilcbiAgICByZXR1cm4geyBwcm9tb3RlZDogMCwgZXZhbHVhdGVkOiAwIH1cbiAgfVxufVxuXG4vKipcbiAqIENhbGN1bGEgbGFzIGNvbWlzaW9uZXMgYmFzYWRhcyBlbiBlbCBuaXZlbCBkZWwgdXN1YXJpb1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2FsY3VsYXRlQ29tbWlzc2lvbih1c2VySWQ6IHN0cmluZywgYmFzZUFtb3VudDogbnVtYmVyKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZFVuaXF1ZSh7XG4gICAgICB3aGVyZTogeyBpZDogdXNlcklkIH0sXG4gICAgICBpbmNsdWRlOiB7IGxldmVsOiB0cnVlIH1cbiAgICB9KVxuXG4gICAgaWYgKCF1c2VyIHx8ICF1c2VyLmxldmVsKSB7XG4gICAgICAvLyBDb21pc2nDs24gYmFzZSBzaSBubyB0aWVuZSBuaXZlbFxuICAgICAgcmV0dXJuIGJhc2VBbW91bnQgKiAwLjEwIC8vIDEwJVxuICAgIH1cblxuICAgIHJldHVybiBiYXNlQW1vdW50ICogKGRlY2ltYWxUb051bWJlcih1c2VyLmxldmVsLmNvbW1pc3Npb25SYXRlKSAvIDEwMClcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBjYWxjdWxhdGluZyBjb21taXNzaW9uOicsIGVycm9yKVxuICAgIHJldHVybiAwXG4gIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RyYSB1biBudWV2byByZWZlcmlkbyB5IGV2YWzDumEgcHJvbW9jaW9uZXNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyUmVmZXJyYWwocmVmZXJyZXJJZDogc3RyaW5nLCByZWZlcnJlZElkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiwgcHJvbW90aW9uUmVzdWx0PzogYW55IH0+IHtcbiAgdHJ5IHtcbiAgICAvLyBSZWdpc3RyYXIgZWwgcmVmZXJpZG9cbiAgICBhd2FpdCBwcmlzbWEudXNlci51cGRhdGUoe1xuICAgICAgd2hlcmU6IHsgaWQ6IHJlZmVycmVkSWQgfSxcbiAgICAgIGRhdGE6IHsgcmVmZXJyZWRCeTogcmVmZXJyZXJJZCB9XG4gICAgfSlcblxuICAgIC8vIENyZWFyIHJlZ2lzdHJvIGVuIHRhYmxhIGRlIHJlZmVycmFsc1xuICAgIGF3YWl0IHByaXNtYS5yZWZlcnJhbC5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICByZWZlcnJlcklkLFxuICAgICAgICByZWZlcnJlZElkLFxuICAgICAgICBsZXZlbDogMSxcbiAgICAgICAgY29tbWlzc2lvbjogMCwgLy8gU2UgY2FsY3VsYXLDoSBkZXNwdcOpc1xuICAgICAgICBzdGF0dXM6ICdBUFBST1ZFRCdcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLy8gRXZhbHVhciBwcm9tb2Npw7NuIGRlbCByZWZlcnJlclxuICAgIGNvbnN0IHN0cnVjdHVyZSA9IGF3YWl0IGNhbGN1bGF0ZU5ldHdvcmtTdHJ1Y3R1cmUocmVmZXJyZXJJZClcbiAgICBsZXQgcHJvbW90aW9uUmVzdWx0ID0gbnVsbFxuXG4gICAgaWYgKHN0cnVjdHVyZS5xdWFsaWZpZXNGb3JQcm9tb3Rpb24pIHtcbiAgICAgIHByb21vdGlvblJlc3VsdCA9IGF3YWl0IHByb21vdGVVc2VyKHJlZmVycmVySWQpXG4gICAgfVxuXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgcHJvbW90aW9uUmVzdWx0IH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZWdpc3RlcmluZyByZWZlcnJhbDonLCBlcnJvcilcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSB9XG4gIH1cbn0gIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImRlY2ltYWxUb051bWJlciIsInZhbHVlIiwidW5kZWZpbmVkIiwidG9OdW1iZXIiLCJtYXBMZXZlbCIsImxldmVsIiwiY29tbWlzc2lvblJhdGUiLCJtYXBVc2VyIiwidXNlciIsInRvdGFsRWFybmluZ3MiLCJnZXREaXJlY3RSZWZlcnJhbHMiLCJ1c2VySWQiLCJyZWZlcnJhbHNSYXciLCJmaW5kTWFueSIsIndoZXJlIiwicmVmZXJyZWRCeSIsImlzQWN0aXZlIiwiaW5jbHVkZSIsInJlZmVycmFscyIsIm1hcCIsInIiLCJlcnJvciIsImNvbnNvbGUiLCJoYXNUaHJlZVJlZmVycmFsc0VhY2giLCJsZW5ndGgiLCJyZWZlcnJhbCIsImRpcmVjdENvdW50IiwiY291bnQiLCJpZCIsImNhbGN1bGF0ZU5ldHdvcmtTdHJ1Y3R1cmUiLCJ1c2VyUmF3IiwiZmluZFVuaXF1ZSIsIkVycm9yIiwiZGlyZWN0UmVmZXJyYWxzIiwiaW5kaXJlY3RSZWZlcnJhbHMiLCJ0b3RhbERlcHRoIiwiZGlyZWN0IiwiaW5kaXJlY3RGcm9tVGhpc1VzZXIiLCJnZXRJbmRpcmVjdFJlZmVycmFscyIsIk1hdGgiLCJtYXgiLCJkZXB0aCIsInVwZGF0ZSIsImRhdGEiLCJkaXJlY3RSZWZlcnJhbHNDb3VudCIsImluZGlyZWN0UmVmZXJyYWxzQ291bnQiLCJxdWFsaWZpZXNGb3JQcm9tb3Rpb24iLCJldmFsdWF0ZVByb21vdGlvbkVsaWdpYmlsaXR5IiwibmV4dExldmVsIiwiZ2V0TmV4dExldmVsIiwibGV2ZWxJZCIsImN1cnJlbnREZXB0aCIsIm1heERlcHRoIiwiYWxsSW5kaXJlY3RSZWZlcnJhbHMiLCJtYXhEZXB0aEZvdW5kIiwiaW5kaXJlY3RSZXN1bHQiLCJoYXNFbm91Z2hEaXJlY3QiLCJtaW5EaXJlY3RSZWZlcnJhbHMiLCJoYXNFbm91Z2hJbmRpcmVjdCIsIm1pbkluZGlyZWN0UmVmZXJyYWxzIiwib3JkZXIiLCJoYXNWYWxpZFN0cnVjdHVyZSIsInNsaWNlIiwicHJvbW90ZVVzZXIiLCJzdWNjZXNzIiwic3RydWN0dXJlIiwiJHRyYW5zYWN0aW9uIiwibGFzdFByb21vdGlvbkF0IiwiRGF0ZSIsInByb21vdGlvbiIsImNyZWF0ZSIsImZyb21MZXZlbElkIiwidG9MZXZlbElkIiwicmVhc29uIiwibWV0YWRhdGEiLCJldmFsdWF0ZWRBdCIsInRvSVNPU3RyaW5nIiwibmV3TGV2ZWwiLCJjdXJyZW50TGV2ZWxJZCIsIm5leHRMZXZlbFJhdyIsImZpbmRGaXJzdCIsImN1cnJlbnRMZXZlbFJhdyIsImdldEFsbExldmVscyIsImxldmVsc1JhdyIsIm9yZGVyQnkiLCJsdmwiLCJldmFsdWF0ZUFsbFByb21vdGlvbnMiLCJhY3RpdmVVc2VycyIsInJvbGUiLCJwcm9tb3RlZCIsImV2YWx1YXRlZCIsInJlc3VsdCIsImxvZyIsIm5hbWUiLCJjYWxjdWxhdGVDb21taXNzaW9uIiwiYmFzZUFtb3VudCIsInJlZ2lzdGVyUmVmZXJyYWwiLCJyZWZlcnJlcklkIiwicmVmZXJyZWRJZCIsImNvbW1pc3Npb24iLCJzdGF0dXMiLCJwcm9tb3Rpb25SZXN1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/multilevel.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prisma.ts":
/*!***************************!*\
  !*** ./src/lib/prisma.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Prevent multiple instances in development\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        \"error\"\n    ]\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3ByaXNtYS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFN0MsNENBQTRDO0FBQzVDLE1BQU1DLGtCQUFrQkM7QUFFakIsTUFBTUMsU0FDWEYsZ0JBQWdCRSxNQUFNLElBQ3RCLElBQUlILHdEQUFZQSxDQUFDO0lBQ2ZJLEtBQUs7UUFBQztLQUFRO0FBQ2hCLEdBQUU7QUFFSixJQUFJQyxJQUF5QixFQUFjSixnQkFBZ0JFLE1BQU0sR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncnVwb3Zpc2lvbmFyaW9zLy4vc3JjL2xpYi9wcmlzbWEudHM/MDFkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcclxuXHJcbi8vIFByZXZlbnQgbXVsdGlwbGUgaW5zdGFuY2VzIGluIGRldmVsb3BtZW50XHJcbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbCBhcyB1bmtub3duIGFzIHsgcHJpc21hOiBQcmlzbWFDbGllbnQgfVxyXG5cclxuZXhwb3J0IGNvbnN0IHByaXNtYSA9XHJcbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSB8fFxyXG4gIG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gICAgbG9nOiBbJ2Vycm9yJ11cclxuICB9KVxyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWEgIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsInByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&page=%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2F%5Bid%5D%2Fstructure%2Froute.ts&appDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Cgrupo-visionarios%5Cgrupovisionarios&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();